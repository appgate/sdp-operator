openapi: 3.0.0
tags:
  - name: Appgate SDP Operator
  - name: UnitTest
info:
  version: Appgate Operator 666
  title: Appgate SDP Operator Unit Test
  description: Unit Test files

paths:
  /entity-test0:
    $ref: '#/entity-test0'
  /entity-test1:
    $ref: '#/entity-test1'
  /entity-test2:
    $ref: '#/entity-test2'
  /entity-test2-without-password:
    $ref: '#/entity-test2-without-password'
  /entity-test3:
    $ref: '#/entity-test3'
  /entity-test3-appgate:
    $ref: '#/entity-test3-appgate'
  /entity-test4:
    $ref: '#/entity-test4'
  /entity-test-with-id:
    $ref: '#/entity-test-with-id'
  /entity-dep-1:
    $ref: '#/entity-dep-1'
  /entity-dep-2:
    $ref: '#/entity-dep-2'
  /entity-dep-3:
    $ref: '#/entity-dep-3'
  /entity-dep-4:
    $ref: '#/entity-dep-4'
  /entity-dep-5:
    $ref: '#/entity-dep-5'
  /entity-dep-6:
    $ref: '#/entity-dep-6'
  /entity-cert:
    $ref: '#/entity-cert'
  /entity-dep-nested:
    $ref: '#/entity-dep-nested'
  /entity-dep-nested-nullable:
    $ref: '#/entity-dep-nested-nullable'
  /entity-discriminator:
    $ref: '#/entity-discriminator'

entity-test0:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityTest0'

entity-test1:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityTest1'

entity-test2:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityTest2'

entity-test2-without-password:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityTest2WithoutPassword'

entity-test3:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityTest3'

entity-test3-appgate:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityTest3Appgate'
            
entity-test4:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityTest4'

entity-test-with-id:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityTestWithId'

entity-dep-1:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDep1'

entity-dep-2:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDep2'
            
entity-dep-3:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDep3'

entity-dep-4:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDep4'

entity-dep-5:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDep5'

entity-dep-6:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDep6'

entity-cert:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityCert'

entity-dep-nested:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDepNested7'

entity-dep-nested-nullable:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDepNestedNullable'

entity-discriminator:
  get:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: '#/definitions/EntityTestList'
  post:
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EntityDiscriminator'

definitions:
  EntityTestList:
    type: object
    properties:
      range:
        type: number
      query:
        type: string
      orderBy:
        type: string
      descending:
        type: bool
      filterBy:
        type: string
      data:
        type: array
        items:
          type: string
  EntityTest0:
    type: object
    required:
      - fieldThree
    properties:
      fieldOne:
        readOnly: true
        type: string
      fieldTwo:
        writeOnly: true
        type: string
      fieldThree:
        deprecated: true
        type: string
      fieldFour:
        type: string
      from:
        type: string
  EntityTest1:
    type: object
    properties:
      fieldOne:
        readOnly: true
        type: string
      fieldTwo:
        writeOnly: true
        type: string
      fieldThree:
        deprecated: true
        type: string
      fieldFour:
        type: string
      from:
        type: string
  EntityTest2:
    type: object
    properties:
      fieldOne:
        writeOnly: true
        format: password
        type: string
      fieldTwo:
        writeOnly: true
        type: string
      fieldThree:
        type: string
      updated:
        type: string
        format: 'date-time'
      created:
        type: string
        format: 'date-time'
  EntityTest3:
    type: object
    properties:
      fieldOne:
        writeOnly: true
        format: bytes
        type: string
      fieldTwo:
        readOnly: true
        type: string
        format: checksum
        x-checksum-source: fieldOne
      fieldThree:
        readOnly: true
        type: number
        format: size
        x-size-source: fieldOne
  EntityTest3Appgate:
    type: object
    properties:
      name:
        type: string
      id:
        type: string
        format: uuid
      fieldOne:
        writeOnly: true
        format: bytes
        type: string
      fieldTwo:
        readOnly: true
        type: string
        format: checksum
        x-checksum-source: fieldOne
      fieldThree:
        readOnly: true
        type: number
        format: size
        x-size-source: fieldOne
  EntityTest4:
    type: object
    properties:
      fieldOne:
        writeOnly: true
        type: string
      fieldTwo:
        readOnly: true
        type: string
  EntityTestWithId:
    type: object
    properties:
      id:
        type: string
        format: uuid
      fieldOne:
        writeOnly: true
        type: string
      fieldTwo:
        readOnly: true
        type: string
  EntityDep1:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
  EntityDep2:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
  EntityDep3:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      deps1:
        type: array
        items:
          type: string
          format: uuid
          x-uuid-ref: EntityDep1
  EntityDep4:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      deps1:
        type: array
        items:
          type: string
          format: uuid
          x-uuid-ref: EntityDep1
      dep2:
        type: string
        x-uuid-ref: EntityDep2
  EntityDep5:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      obj1:
        type: object
        properties:
          obj2:
            type: object
            properties:
              dep1:
                type: string
                format: uuid
                x-uuid-ref: EntityDep1
  EntityDep6:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      deps4:
        type: array
        items:
          type: string
          format: uuid
          x-uuid-ref: EntityDep4
      obj1:
        type: object
        properties:
          dep3:
            type: string
            format: uuid
            x-uuid-ref: EntityDep3
          obj2:
            type: object
            properties:
              deps1:
                type: array
                items:
                  type: object
                  properties:
                    dep1:
                      type: string
                      format: uuid
                      x-uuid-ref: EntityDep1
              deps2:
                type: array
                items:
                  type: string
                  format: uuid
                  x-uuid-ref: EntityDep2

  EntityCert:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      fieldOne:
        type: string
        format: PEM
      fieldTwo:
        type: object
        format: certificate
        x-certificate-source: fieldOne
        readOnly: true
        properties:
          version:
            type: number
          serial:
            type: string
          issuer:
            type: string
            description: The issuer name of the certificate.
          subject:
            type: string
            description: The subject name of the certificate.
          validFrom:
            type: string
            format: 'date-time'
          validTo:
            type: string
            format: 'date-time'
          fingerprint:
            type: string
          certificate:
            type: string
            format: byte
          subjectPublicKey:
            type: string
            format: byte
  EntityTest2WithoutPassword:
    type: object
    properties:
      fieldOne:
        writeOnly: true
        type: string
      fieldTwo:
        writeOnly: true
        type: string
      fieldThree:
        type: string
      updated:
        type: string
        format: 'date-time'
      created:
        type: string
        format: 'date-time'
  EntityDepNested7:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      deps:
        type: object
        properties:
          field1:
            type: string
          field2:
            type: string
            format: uuid
            x-uuid-ref:
              - EntityDep2
              - EntityDep1
      actions:
        type: array
        items:
          type: object
          required:
            - subtype
            - action
            - hosts
          properties:
            subtype:
              type: string
              enum:
                - icmp_up
                - icmp_down
                - icmpv6_up
                - icmpv6_down
                - udp_up
                - udp_down
                - tcp_up
                - tcp_down
                - ah_up
                - ah_down
                - esp_up
                - esp_down
                - gre_up
                - gre_down
                - http_up
            action:
              type: string
              enum:
                - allow
                - block
                - alert
            hosts:
              type: array
              items:
                type: string
              example:
                - 10.0.0.1
                - 10.0.0.0/24
                - hostname.company.com
                - 'dns://hostname.company.com'
                - 'aws://security-group:accounting'
            ports:
              type: array
              items:
                type: string
              example:
                - 80
                - 1024-65535
            monitor:
              type: object
              properties:
                enabled:
                  type: boolean
                  default: false
                timeout:
                  type: integer
                  default: 30
  EntityDepNestedNullable:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      actions:
        type: array
        items:
          type: object
          required:
            - subtype
            - action
            - hosts
          properties:
            subtype:
              type: string
              enum:
                - icmp_up
                - icmp_down
                - icmpv6_up
                - icmpv6_down
                - udp_up
                - udp_down
                - tcp_up
                - tcp_down
                - ah_up
                - ah_down
                - esp_up
                - esp_down
                - gre_up
                - gre_down
                - http_up
            action:
              type: string
              enum:
                - allow
                - block
                - alert
            hosts:
              type: array
              items:
                type: string
              example:
                - 10.0.0.1
                - 10.0.0.0/24
                - hostname.company.com
                - 'dns://hostname.company.com'
                - 'aws://security-group:accounting'
            ports:
              type: array
              items:
                type: string
              example:
                - 80
                - 1024-65535
            monitor_nullable:
              type: object
              nullable: true
              properties:
                enabled:
                  type: boolean
                  default: false
                timeout:
                  type: integer
                  default: 30
  EntityDiscriminator:
    type: object
    discriminator:
      propertyName: type
      mapping:
        DiscriminatorOne: '#/definitions/DiscriminatorOne'
        DiscriminatorTwo: '#/definitions/DiscriminatorTwo'
    required:
      - type
  BaseEntityDiscriminator:
    allOf:
      - type: object
        required:
          - type
        properties:
          type:
            type: string
            enum:
              - DiscriminatorOne
              - DiscriminatorTwo
          fieldOne:
            type: string
  ConfigurableEntityDiscriminator:
    allOf:
      - $ref: '#/definitions/BaseEntityDiscriminator'
      - type: object
        properties:
          configurableFieldOne:
            type: boolean
            default: false
  DiscriminatorOne:
    allOf:
      - $ref: '#/definitions/BaseEntityDiscriminator'
      - type: object
        required:
          - discriminatorOneFieldOne
        properties:
          discriminatorOneFieldOne:
            type: string
          discriminatorOneFieldTwo:
            type: string
  DiscriminatorTwo:
    allOf:
      - $ref: '#/definitions/ConfigurableEntityDiscriminator'
      - type: object
        required:
          - discriminatorTwoFieldTwo
        properties:
          discriminatorTwoFieldOne:
            type: boolean
          discriminatorTwoFieldTwo:
            type: boolean
