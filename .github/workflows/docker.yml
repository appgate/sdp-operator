---
name: Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  get-specs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install wget tool
        run: |
          sudo apt-get update
          sudo apt-get install wget
      - name: Get openspec API
        run: ./bin/get-open-spec.sh
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: openspecs
          path: /tmp/openspec-*.zip

  build:
    needs: get-specs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: openspecs
          path: /tmp
      - name: install unzip
        run: |
          sudo apt-get update
          sudo apt-get install unzip
      - name: Get openspec API
        run: ./bin/unzip-open-spec.sh
        shell: bash
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-build.txt
      - name: Lint with mypy
        run: |
          MYPYPATH=mypy-stubs mypy appgate
      - name: Test with pytest
        run: |
          PYTHONPATH=. pytest tests
      - name: Check formatting with black
        run: |
          black --check --diff appgate tests
      - name: Get Operator chart version
        id: operatorChartVersion
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.version' k8s/operator/Chart.yaml
      - name: Get CRD chart version
        id: crdChartVersion
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.version' k8s/crd/Chart.yaml
      - name: Compare Operator vs CRD chart version
        run: |
          [ "${{ steps.operatorChartVersion.outputs.result }}" == "${{ steps.crdChartVersion.outputs.result }}" ] || (echo "Operator and CRD chart version must match to prevent divergence of operator and crd." && exit 1)

  operator:
    needs: image
    runs-on: ubuntu-latest
    env:
      HELM_EXPERIMENTAL_OCI: 1
    steps:
      - uses: actions/checkout@v2
      - name: Read operator chart version
        run: |
          echo "chart_version=$(grep version: k8s/operator/Chart.yaml | awk '/version:/{print $NF}')" >> $GITHUB_ENV
      - uses: azure/setup-helm@v1
        with:
          version: 3.7.2
      - name: Login to GitHub Container Registry
        run: helm registry login ghcr.io/${{ github.repository }} --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }}
      - name: Lint chart
        run: helm lint k8s/operator
      - name: Package chart
        run: helm package k8s/operator
      - name: Push chart
        if: ${{ github.ref == 'refs/heads/main' }}
        run: helm push sdp-operator-${{ env.chart_version }}.tgz oci://ghcr.io/appgate/charts

  image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: openspecs
          path: /tmp
      - name: install unzip
        run: |
          sudo apt-get update
          sudo apt-get install unzip
      - name: Get Open API spec
        run: ./bin/unzip-open-spec.sh
        shell: bash
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Operator app version
        id: operatorAppVersion
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.appVersion' k8s/operator/Chart.yaml
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}/sdp-operator:${{ steps.operatorAppVersion.outputs.result }}

  crd:
    needs: image
    runs-on: ubuntu-latest
    env:
      HELM_EXPERIMENTAL_OCI: 1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: openspecs
          path: /tmp
      - name: Install unzip
        run: |
          sudo apt-get update
          sudo apt-get install unzip
      - name: Get OpenAPI specs
        run: ./bin/unzip-open-spec.sh
        shell: bash
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-build.txt
      - name: Compare CRDs
        run: |
          for version in $(seq 14 17); do
            python3 -m appgate --spec-directory api_specs/v${version} dump-crd
            echo '{{ if eq .Values.version '\"v"${version}"\"' }}' | cat - *-crd.yml > v${version}.yaml
            echo '{{ end }}' >> v${version}.yaml
            cmp k8s/crd/templates/v${version}.yaml v${version}.yaml || (echo "Generated CRDs and checked-in CRDs do not match. Please download the latest API specs, generate and check-in the updated CRDs under k8s/crd/templates." && exit 1)
          done
      - name: Read crd chart version
        run: |
          echo "chart_version=$(grep version: k8s/crd/Chart.yaml | awk '/version:/{print $NF}')" >> $GITHUB_ENV
      - uses: azure/setup-helm@v1
        with:
          version: 3.7.2
      - name: Login to GitHub Container Registry
        run: helm registry login ghcr.io/${{ github.repository }} --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }}
      - name: Lint chart
        run: helm lint k8s/crd
      - name: Package chart
        run: helm package k8s/crd
      - name: Push chart
        if: ${{ github.ref == 'refs/heads/main' }}
        run: helm push sdp-operator-crd-${{ env.chart_version }}.tgz oci://ghcr.io/appgate/charts
