name: Release Chart OCI

on:
  workflow_call:
    inputs:
      push:
        type: boolean
        required: true

jobs:
  operator:
    runs-on: ubuntu-latest
    env:
      HELM_EXPERIMENTAL_OCI: 1
    steps:
      - uses: actions/checkout@v4
      - name: Read operator chart version
        run: |
          echo "chart_version=$(grep version: k8s/operator/Chart.yaml | awk '/version:/{print $NF}')" >> $GITHUB_ENV
      - uses: azure/setup-helm@v3
      - name: Login to GitHub Container Registry
        run: helm registry login ghcr.io/${{ github.repository }} --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }}
      - name: Lint chart
        run: helm lint k8s/operator
      - name: Package chart
        run: helm package k8s/operator
      - name: Push chart
        if: ${{ github.ref == 'refs/heads/main' }}
        run: helm push sdp-operator-${{ env.chart_version }}.tgz oci://ghcr.io/appgate/charts

  crd:
    runs-on: ubuntu-latest
    env:
      HELM_EXPERIMENTAL_OCI: 1
    steps:
      - uses: actions/checkout@v4
      - name: Read crd chart version
        run: |
          echo "chart_version=$(grep version: k8s/crd/Chart.yaml | awk '/version:/{print $NF}')" >> $GITHUB_ENV
      - uses: azure/setup-helm@v3
      - name: Login to GitHub Container Registry
        run: helm registry login ghcr.io/${{ github.repository }} --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }}
      - name: Lint chart
        run: helm lint k8s/crd
      - name: Package chart
        run: helm package k8s/crd
      - name: Push chart
        if: ${{ inputs.push }}
        run: $( && helm push sdp-operator-crd-${{ env.chart_version }}.tgz oci://ghcr.io/appgate/charts)
